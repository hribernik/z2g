{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/_services/socketchat.service.ts","./src/app/chatinbox/chatinbox.component.ts","./src/app/chatinbox/chatinbox.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/_services/routeguard.guard.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/tv/tv.component.ts","./src/app/tv/tv.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit, OnDestroy, HostListener} from '@angular/core';\nimport {SocketchatService} from '../_services/socketchat.service';\nimport {TokenStorageService} from \"../_services/token-storage.service\";\nimport {Socket} from \"socket.io-client\";\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, OnDestroy {\n  @HostListener('window:unload', [ '$event'])\n  logout(){\n    this.socket.emit('unvote', this.username);\n    this.socket.emit('left', this.username);\n    this.chatService.disconnect();\n  }\n\n\nprivate socket: Socket;\nprivate username: string;\n\n  constructor(private chatService: SocketchatService, private tokenService: TokenStorageService) {\n\n    this.socket = this.chatService.getSocket();\n    this.username = this.tokenService.getUser().username;\n\n    }\n\n\n\nngOnInit(): void {\n  this.chatService.connect();\n}\n\nngOnDestroy(): void{\n\n  this.socket.emit('unvote', this.username);\n  this.socket.emit('left', this.username);\n  this.chatService.disconnect();\n}\n\ndisconnect(){\n    this.chatService.disconnect();\n}\n\n}\n"," <div id=\"wrapper\"> <app-tv></app-tv>\n  <app-chatinbox></app-chatinbox>\n   </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\n          <div *ngIf=\"username.errors.required\">Please enter a username</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username cannot be longer than 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\n          <div *ngIf=\"email.errors.required\">Please enter an email address</div>\n          <div *ngIf=\"email.errors.email\">\n            Email address has to be valid\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\n          <div *ngIf=\"password.errors.required\">Please enter a password</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password has to be at least 6 characters long\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration was successful!\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from '../../environments/environment';\n\nconst AUTH_API = environment.auth_url;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getPublicContent().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>\n    <img src=\"assets/z2g.svg\" class=\"img-fluid rounded mx-auto d-block\" width=\"85%\"alt=\"Responsive image\" height=\"50%\" >\n    </p>\n    <p>Chat with random people and watch random videos.</p>\n\n  </header>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ws_url: 'http://localhost:8080',\n  ws_sec: false,\n  auth_url: 'http://localhost:8080/api/auth/',\n  user_url: 'http://localhost:8080/api/test/',\n  SKIP_PREFLIGHT_CHECK: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() {}\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n  public isAuthenticated(): boolean {\n    return false;\n  }\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return {};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketchatService {\n   // @ts-ignore\n  socket: Socket;\n\n  constructor() {\n\n  }\n\n  connect(){\n    this.socket = io(environment.ws_url, {\n      secure: environment.ws_sec\n    });\n  }\n  disconnect(){\n    this.socket.disconnect();\n  }\n\n  sendMessage(message: string){\n    this.socket.emit('new-message', message);\n  }\n  getSocket(){\n    return this.socket;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SocketchatService} from '../_services/socketchat.service';\nimport {TokenStorageService} from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-chatinbox',\n  templateUrl: './chatinbox.component.html',\n  styleUrls: ['./chatinbox.component.css']\n})\nexport class ChatinboxComponent implements OnInit {\n\n  public message = '';\n\n  private socket: any;\n  private username = '';\n\n  constructor(private  chatService: SocketchatService , private tokenservice: TokenStorageService) {\n    this.username = this.tokenservice.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.socket = this.chatService.getSocket();\n    this.setupChatinbox();\n    this.socket.emit('join', this.username);\n  }\n\n  sendMessage(){\n    this.socket.emit('message', { user: this.username, message: this.message});\n    const element = document.createElement('li');\n    element.className = 'self-message-item';\n    element.innerHTML = '<div class=\"self-message-container\"> <p><span style=\"font-weight: bold\">' + this.username + '</span><br>' + this.message + '</p></div>';\n    // @ts-ignore\n    document.getElementById('chat-message-list').appendChild(element);\n    this.message = '';\n    element.scrollIntoView({behavior: 'smooth'});\n\n  }\n\n  // tslint:disable-next-line:typedef\n  setupChatinbox(){\n\n    //adding listeners for chat inbox;\n    this.socket.on('new-user', (data: any) => {\n      if (data){\n        const element = document.createElement('li');\n        element.className = 'join-message-item';\n        element.innerHTML = '<div class=\"join-message-container\"> <p><span style=\"font-weight: bold\">' + data+ '</span> joined the Chat.</p></div>';\n        // @ts-ignore\n        document.getElementById('chat-message-list').appendChild(element);\n        element.scrollIntoView({behavior: 'smooth'});\n      }\n    });\n\n    this.socket.on('left', (data: any) => {\n      if (data){\n        const element = document.createElement('li');\n        element.className = 'left-message-item';\n        element.innerHTML = '<div class=\"left-message-container\"> <p><span style=\"font-weight: bold\">' + data+ '</span> has left the Chat.</p></div>';\n        // @ts-ignore\n        document.getElementById('chat-message-list').appendChild(element);\n        element.scrollIntoView({behavior: 'smooth'});\n      }\n    });\n    this.socket.on('message-broadcast', (data: any) => {\n      if (data){\n        const element = document.createElement('li');\n        element.className = 'message-item';\n        element.innerHTML = '<div class=\"message-container\"> <p><span style=\"font-weight: bold\">' + data.user + '</span><br>' + data.message + '</p></div>';\n        // @ts-ignore\n        document.getElementById('chat-message-list').appendChild(element);\n        element.scrollIntoView({behavior: 'smooth'});\n      }\n    });\n  }\n\n\n\n}\n","<div class=\"chat-messages\">\n  <div class=\"chat-messages-show-container\">\n    <ul class=\"chat-messages-show-list\" id=\"chat-message-list\">\n    </ul>\n  </div>\n  <div class=\"chat-messages-create-container\">\n    <input class=\"chat-messages-create-input\" type=\"text\" [(ngModel)]=\"message\" (keydown)=\"$event.key === 'Enter' ? sendMessage() : null\">\n    <button  class=\"chat-messages-create-button\" (click)=\"sendMessage()\"> Send </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[] = [];\n  isLoggedIn = false;\n  username?: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-light bg-light\">\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\"><b>zapp2gether</b> - by Benjamin Hribernik & Peter Söllnbauer </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"chat\">Video Room</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">Sign Out</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from '../../environments/environment';\n\nconst API_URL = environment.user_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n    <h3>\n      <strong>My User-Data</strong>\n    </h3>\n  <p>\n    <strong>Username:</strong>\n    {{ currentUser.username }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { YouTubePlayerModule} from '@angular/youtube-player';\nimport { ChatComponent } from './chat/chat.component';\nimport { ChatinboxComponent } from './chatinbox/chatinbox.component';\nimport { TvComponent } from './tv/tv.component';\nimport {RouteguardGuard} from \"./_services/routeguard.guard\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    ChatComponent,\n    ChatinboxComponent,\n    TvComponent,\n  ],\n  imports: [\n    YouTubePlayerModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, RouterModule} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {TokenStorageService} from './token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteguardGuard implements CanActivate {\n  isLoggedIn = false;\n\n\n  constructor(public tokenStorageService: TokenStorageService, public router: Router) {\n  }\n\n  canActivate(): boolean {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n\n  }\n}\n\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'x-access-token';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {ChatComponent} from './chat/chat.component';\nimport {RouteguardGuard} from './_services/routeguard.guard';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [RouteguardGuard] },\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {path: 'chat', component: ChatComponent, canActivate: [RouteguardGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SocketchatService} from '../_services/socketchat.service';\nimport {TokenStorageService} from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-tv',\n  templateUrl: './tv.component.html',\n  styleUrls: ['./tv.component.css']\n})\nexport class TvComponent implements OnInit {\n\n  userCount = 1;\n  votes = 0;\n  ytId = '';\n  autoplay = 'false';\n  private voted = false;\n  private socket: any;\n\n  constructor( private chatservice: SocketchatService, private tokenService: TokenStorageService) { }\n\n  ngOnInit(): void {\n   this.socket = this.chatservice.getSocket();\n   this.setupVoteService();\n   this.voted = false;\n\n// for yt:\n\n   const tag = document.createElement('script');\n   tag.src = 'https://www.youtube.com/iframe_api';\n   document.body.appendChild(tag);\n  }\n\n// adding eventlistners for voting\n\n  setupVoteService(){\n    this.socket.on('zapp', (data: string) => {\n      this.ytId = data;\n      console.log('ZAAAAPPPPPPPEEEEEDDDD');\n      this.resetVoteButton();\n    });\n    this.socket.on('voted', (data: number) => {this.votes = data; });\n    this.socket.on('usercount', (data: number) => {this.userCount = data;  });\n    this.socket.on('current-status', (data: any) => {\n      this.ytId = data.video;\n      this.userCount = data.users;\n      this.votes = data.votes;\n      this.resetVoteButton();\n    });\n\n    this.socket.on('disconnect', ()=>{\n      console.log('CONNECTION TO SERVER LOST');\n      this.resetVoteButton();\n      this.voted =false;\n    })\n  }\n\n  vote(){\n\n    if (this.userCount === 1){\n      this.socket.emit('vote', this.tokenService.getUser().username);\n    }\n    else {\n\n      if (!this.voted) {\n        this.socket.emit('vote', this.tokenService.getUser().username);\n        this.voted = true;\n        document.getElementById('vote_button')!.innerHTML = ' PULL BACK! ';\n        document.getElementById('vote_button')!.style.backgroundColor = '#CD491F';\n      } else {\n        this.unvote();\n      }\n    }\n  }\n  unvote(){\n    if(this.voted) {\n      this.socket.emit('unvote', this.tokenService.getUser().username);\n      this.voted = false;\n      this.resetVoteButton();\n    }\n  }\n\n\nresetVoteButton(){\n  document.getElementById('vote_button')!.innerHTML = ' VOTE NEXT! ';\n  document.getElementById('vote_button')!.style.backgroundColor = 'snow';\n  this.voted = false;\n}\n}\n\n\n\n\n","  <youtube-player videoId=\"{{ytId}}\"></youtube-player>\n  <div class=\"voting-bar\">\n    <button id=\"vote_button\" (click)=\"vote()\"> VOTE NEXT </button>\n    <p>USERS ONLINE: <span>{{userCount}}</span> ACTIVE VOTES <span>{{votes}}</span></p>\n\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) {\n\n  }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"username.errors && f.submitted\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"password.errors && f.submitted\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      <h4>Hi !</h4>\n      <p>In the Zapp2Gether-Videoroom, you are able to chat with others, and watch random youtube-videos. <br>\n        In case, you want to switch to the next video, just vote for it!<br><br>\n        If more than half of the audience votes next, we zapp to a new random video. <br><br>\n        It's like sharing a TV-remote and TV with  hundreds of strangers. <br><br>\n        <strong>Sounds fun, doesn't it?</strong><br>\n        Now don't be boring and\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"../chat\"> >> Join the Video Room << </a>\n      </p><p id=\"disclaimer\"><strong>Disclaimer:</strong><br>If you feel like cycling over the same videos over and over, it may have happend, that our\n    youtube API key hit his quota, so videos are pulled from a fairly small backup-array. Just come back tomorrow for new videos.<span><br> OMG this is really like oldschool TV...</span></p>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}